@using iProjects.Models
@model IEnumerable<iProjects.Models.Project>

@{
    ViewBag.Title = "Index";
}
@Html.ValidationSummary(false)
<h2>Index</h2>

@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    <p type="button" class="btn btn btn-success">
        @Html.ActionLink("Create New", "Create", new { onclick = "noty({text: 'Create New', type: 'Success'});" })
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Client.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProjectCategoryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.User.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProjectTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Url)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Budget)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TotalTimeSpent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Finished)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
       <td>
            @Html.DisplayFor(modelItem => item.Client.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProjectCategory.CategoryName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.User.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProjectTitle)
        </td>
        <td>
            @Html.Raw(item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Url)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Budget)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalTimeSpent)
        </td>
        <td>
            @{
                if (item.Finished == false)
                {
                    <div class="label label-warning">
                        <div class="hidden">
                            @Html.DisplayFor(modelItem => item.Finished)
                        </div>
                        Opened
                    </div>
                }
                else
                {
                    <div class="label label-success">
                        <div class="hidden">
                            @Html.DisplayFor(modelItem => item.Finished)
                        </div>
                        Finished
                    </div>
                }
            }

        </td>
        <td>
            @if (Request.IsAuthenticated && User.IsInRole("Admin"))
            {
                <div class="btn-group">
                    <button type="button" class="btn btn-default btn-clean dropdown-toggle" data-toggle="dropdown">
                        Action <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu pull-right" role="menu" aria-labelledby="dropdownMenu5">
                        <li>@Html.ActionLink("Edit", "Edit", new {id = item.ProjectId})</li>
                        <li> @Html.ActionLink("Details", "Details", new {id = item.ProjectId}) </li>
                        <li> @Html.ActionLink("Delete", "Delete", new {id = item.ProjectId}, new {onclick = "noty({text: 'Are you sure you want to delete!', type: 'error'});"})</li>
                    </ul>
                </div>
            }
        </td>
    </tr>
}

</table>
