@model IEnumerable<iProjects.Models.Invoice>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    <p type="button" class="btn btn btn-success" onclick="noty({text: 'Create New Invoce/Payment', type: 'success'});">
        @Html.ActionLink("Create New", "Create")
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Project.ProjectTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PaymentMethode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InvoiceNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Client)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Company)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Town)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccountNr)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Swift)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Tax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Discount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Total)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PaymentDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsPayed)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Project.ProjectTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentMethode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InvoiceNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Client)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Company)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Town)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Street)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountNr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Swift)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tax)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Total)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentDate)
            </td>
            <td>
                @{
                    if (item.IsPayed == false)
                    {
                        <div class="label label-warning">
                            <div class="hidden">
                                @Html.DisplayFor(modelItem => item.IsPayed)
                            </div>
                            Not Payed
                        </div>
                    }
                    else
                    {
                        <div class="label label-success">
                            <div class="hidden">
                                @Html.DisplayFor(modelItem => item.IsPayed)
                            </div>
                            Payed
                        </div>
                    }
                }
            </td>
            <td>
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <div class="btn-group">
                        <button type="button" class="btn btn-default btn-clean dropdown-toggle" data-toggle="dropdown">
                            Action <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu pull-right" role="menu" aria-labelledby="dropdownMenu5">
                            <li>@Html.ActionLink("Edit", "Edit", new {id = item.ProjectId})</li>
                            <li> @Html.ActionLink("Details", "Details", new {id = item.ProjectId}) </li>
                            <li> @Html.ActionLink("Delete", "Delete", new {id = item.ProjectId})</li>
                        </ul>
                    </div>
                }
            </td>
        </tr>
    }

</table>

